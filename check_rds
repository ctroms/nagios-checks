#!/bin/bash
#simple nagios check for amazon rds instances
#can be run like:
#/var/spool/nagios/plugins/check_rds MyRDS WriteIOPS 6000 1000
#requires aws api tools
. /var/spool/nagios/plugins/utils.sh

DBINSTANCE=$1
METRIC=$2
MXTHRESHOLD=$3
MNTHRESHOLD=$4
RESULT=""
MON-GET-CMD="/opt/aws/apitools/mon/bin/mon-get-stats"
AWS-CRED-FILE="/opt/aws/credential-file-path.conf"


function warn {
    echo "WARNING - $WARNIN - RequestCount:$RESULT | RequestCount:$RESULT;"
    exit $STATE_WARNING
}

function check_stat {
    if [[ "$METRIC" == "CPUUtilization" ]]
    then
	RESULT=`$MON-GET-CMD $METRIC --period 60 --namespace AWS/RDS --dimensions "DBInstanceIdentifier=$DBINSTANCE" --statistics "Sum" --aws-credential-file=$AWS-CRED-FILE | tail -n 1 | awk '{print $3}'`
    else
	RESULT=`$MON-GET-CMD $METRIC --period 60 --start-time $(date +'%Y-%m-%dT%H:%M' --date='-1 minutes') --end-time $(date +'%Y-%m-%dT%H:%M') --namespace AWS/RDS --dimensions "DBInstanceIdentifier=$DBINSTANCE" --statistics "Sum" --aws-credential-file=$AWS-CRED-FILE| tail -n 1 | awk '{print $3}'`
    fi

    if [[ "$RESULT" == *E* ]]
    then
	RESULT=$(echo $RESULT | awk '{printf "%f", $1}')
    fi
}

check_stat
STAT="$METRIC=${RESULT}"

#use these later for different min max checks
if [[ "$METRIC" -eq "WriteIOPS" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "ReadIOPS" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "ReadThroughput" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "WriteThroughput" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "ReadLatency" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "WriteLatency" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "DatabaseConnections" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "CPUUtilization" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "FreeStorageSpace" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "DiskQueueDepth" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "FreeableMemory" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "BinLogDiskUsage" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

elif [[ "$METRIC" -eq "SwapUsage" ]]
    then
    echo "OK - $STAT |$STAT\n"
    exit $STATE_OK

fi


